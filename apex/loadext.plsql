create or replace procedure "LOADEXTSLA"
is
begin
DECLARE 
v_sr_no number := 1; 
V_Bestaand_WANUMMER number := 0; 
V_Huidig_WANUMMER VARCHAR2 (100) := '';
V_Offerte_WANUMMER VARCHAR2 (100) := ''; 
BEGIN 
INSERT INTO WA_LOGGING (GEBRUIKER, PAGINA, DATUM, OMSCHRIJVING)
VALUES ('SYSTEM', '', SYSDATE, 'OPLADEN SLA (ExT): START OPLADEN');

DELETE FROM WA_SLA;

-- Read data from EXT_WA_SLA 
FOR c1 IN (SELECT WA_OS,STATUS_EN_BSCH,LNITEM_SLA_GECONF_RAG,LNITEM_SLA_CD,IMAC_WA_TYPE_NM,LNITEM_ACT_GECOR_SLA_CD,
IMAC_BSCH1,LNITEM_BSCH,LNITEM_CATEGORY_TP,IMAC_CREATIE_DTM,LNITEM_BESTEL_DTM,LNITEM_AFGESPROKEN_STREEF_DTM,
LNITEM_ACTUELE_STREEF_DTM,LNITEM_OPENSTAANDE_UREN_HVH,LNITEM_SCHORSING_UREN_HVH,IMAC_SLUIT_DTM,LNITEM_SYSTEEM_SLUIT_DTM,
LNITEM_EFFECTIEF_SLUIT_DTM,LNITEM_OS,LNITEM_INTERN_OPVOLGING_NM, WONDER_LAATSTE_STATUS_BSCH, LNITEM_START_DTM
FROM EXT_WA_SLA
WHERE REPLACE(WA_OS, chr(0),'') LIKE 'W%' and REPLACE(STATUS_EN_BSCH, chr(0),'') " dirty="false"<> 'cancelled') LOOP

V_Huidig_WANUMMER := REPLACE(c1.WA_OS,chr(0),'');

INSERT INTO WA_SLA(
WA_OS, STATUS_EN_BSCH, LNITEM_SLA_GECONF_RAG, LNITEM_SLA_CD, IMAC_WA_TYPE_NM, LNITEM_ACT_GECOR_SLA_CD,
IMAC_BSCH, LNITEM_BSCH, LNITEM_CATEGORY_TP, IMAC_CREATIE_DTM, LNITEM_BESTEL_DTM, LNITEM_AFGESPROKEN_STREEF_DTM,
LNITEM_ACTUELE_STREEF_DTM, LNITEM_OPENSTAANDE_UREN_HVH, LNITEM_SCHORSING_UREN_HVH, IMAC_SLUIT_DTM,
LNITEM_SYSTEEM_SLUIT_DTM, LNITEM_EFFECTIEF_SLUIT_DTM, LNITEM_OS, WA_EIGENAAR, WONDER_STATUS, EFFECTIEVE_START_DTM 
) 
VALUES (
REPLACE(c1.WA_OS,CHR(0),''),
REPLACE(c1.STATUS_EN_BSCH,CHR(0),''),
REPLACE(c1.LNITEM_SLA_GECONF_RAG,CHR(0),''),
REPLACE(c1.LNITEM_SLA_CD,CHR(0),''),
REPLACE(c1.IMAC_WA_TYPE_NM,CHR(0),''),
REPLACE(c1.LNITEM_ACT_GECOR_SLA_CD,CHR(0),''),
REPLACE(c1.IMAC_BSCH1,CHR(0),''),
REPLACE(c1.LNITEM_BSCH,CHR(0),''),
REPLACE(c1.LNITEM_CATEGORY_TP,CHR(0),''),
TO_DATE(REPLACE(c1.IMAC_CREATIE_DTM,CHR(0),''),'YYYY-MM-DD HH24:MI:SS'),
TO_DATE(REPLACE(c1.LNITEM_BESTEL_DTM,CHR(0),''),'YYYY-MM-DD HH24:MI:SS'),
TO_DATE(REPLACE(c1.LNITEM_AFGESPROKEN_STREEF_DTM,CHR(0),''),'YYYY-MM-DD HH24:MI:SS'),
TO_DATE(REPLACE(c1.LNITEM_ACTUELE_STREEF_DTM,CHR(0),''),'YYYY-MM-DD HH24:MI:SS'),
TO_NUMBER(REPLACE(c1.LNITEM_OPENSTAANDE_UREN_HVH,CHR(0),'')),
TO_NUMBER(REPLACE(c1.LNITEM_SCHORSING_UREN_HVH,CHR(0),'')),
TO_DATE(REPLACE(c1.IMAC_SLUIT_DTM,CHR(0),''),'YYYY-MM-DD HH24:MI:SS'),
TO_DATE(REPLACE(c1.LNITEM_SYSTEEM_SLUIT_DTM,CHR(0),''),'YYYY-MM-DD HH24:MI:SS'),
TO_DATE(REPLACE(c1.LNITEM_EFFECTIEF_SLUIT_DTM,CHR(0),''),'YYYY-MM-DD HH24:MI:SS'),
REPLACE(c1.LNITEM_OS,CHR(0),''),
REPLACE(c1.LNITEM_INTERN_OPVOLGING_NM,CHR(0),''), 
REPLACE(c1.WONDER_LAATSTE_STATUS_BSCH,CHR(0),''),
TO_DATE(REPLACE(c1.LNITEM_START_DTM,CHR(0),''),'YYYY-MM-DD HH24:MI:SS')
);
v_sr_no := v_sr_no + 1;

END LOOP; 

UPDATE WA_SLA SET OFFERTE_WA_OS = WA_OS WHERE OFFERTE_WA_OS IS NULL;

INSERT INTO WA_LOGGING (GEBRUIKER, PAGINA, DATUM, OMSCHRIJVING)
VALUES ('SYSTEM', '', SYSDATE, 'OPLADEN SLA (ExT): STOP OPLADEN');

-- Start loading SLA Project Bestellingen 
insert into WA_LOGGING (GEBRUIKER, PAGINA, DATUM, OMSCHRIJVING)
values ('SYSTEM', '', SYSDATE, 'OPLADEN SLA PROJECTEN (ExT): START OPLADEN');

-- Read data from EXT_OPV_SLA_PROJ_BEST 
FOR c1 IN (SELECT WA_OS,OFFERTE_WA_OS,LAATSTE_STATUS_BSCH,SLA_GECONF_RAG,WA_TP_CD,BESTELLING_VOLG_NR,PROJECTFASE_BSCH,
BESTELLING_BSCH,TOTAAL_EXCL_BTW_BDRG,PROJ_KORTE_NM,VOOR_NM,FAMILIE_NM,GEPLANDE_START_DTM,EFFECTIEVE_START_DTM,
GEPLANDE_EIND_DTM,EFFECTIEVE_EIND_DTM,VERWACHTE_EIND_DTM,SLA_WRKLIJK_AFWIJKINGS_PCT,FASE,PV_ONTVANGST_DTM,CLUSTER_MANAGER,
WA_EIGENAAR, PRESAGE_ID
FROM EXT_OPV_SLA_PROJ_BEST
WHERE REPLACE(WA_OS, chr(0),'') LIKE 'W%' ) LOOP

V_Huidig_WANUMMER := REPLACE(c1.WA_OS,CHR(0),'');
V_Offerte_WANUMMER := REPLACE(c1.OFFERTE_WA_OS,CHR(0),'');

INSERT INTO WA_SLA(
WA_OS, OFFERTE_WA_OS, STATUS_EN_BSCH, LNITEM_SLA_GECONF_RAG, LNITEM_SLA_CD, LNITEM_ACT_GECOR_SLA_CD, BESTELLING_VOLG_NR,
PROJECTFASE_BSCH, BESTELLING_BSCH, BESTEL_BEDRAG, PROJ_KORTE_NM, PM, LNITEM_BESTEL_DTM, IMAC_CREATIE_DTM, 
EFFECTIEVE_START_DTM, LNITEM_AFGESPROKEN_STREEF_DTM, LNITEM_EFFECTIEF_SLUIT_DTM, LNITEM_ACTUELE_STREEF_DTM, SLA_PCT, FASE,
PV_ONTVANGST_DTM, CLUSTER_MNGR, WA_EIGENAAR, IMAC_WA_TYPE_NM, PRESAGE_ID, WONDER_STATUS 
) 
VALUES (
V_Huidig_WANUMMER,
REPLACE(c1.OFFERTE_WA_OS,CHR(0),''),
REPLACE(c1.LAATSTE_STATUS_BSCH,CHR(0),''),
REPLACE(c1.SLA_GECONF_RAG,CHR(0),''),
REPLACE(c1.WA_TP_CD,CHR(0),''),
REPLACE(c1.WA_TP_CD,CHR(0),''),
REPLACE(c1.BESTELLING_VOLG_NR,CHR(0),''),
REPLACE(c1.PROJECTFASE_BSCH,CHR(0),''),
REPLACE(c1.BESTELLING_BSCH,CHR(0),''),
TO_NUMBER(REPLACE(c1.TOTAAL_EXCL_BTW_BDRG,CHR(0),'')),
REPLACE(c1.PROJ_KORTE_NM,CHR(0),''),
REPLACE(c1.FAMILIE_NM,CHR(0),'') || ' ' || REPLACE(c1.VOOR_NM,CHR(0),''),
TO_DATE(REPLACE(c1.GEPLANDE_START_DTM,CHR(0),''),'YYYY-MM-DD HH24:MI:SS'),
TO_DATE(REPLACE(c1.GEPLANDE_START_DTM,CHR(0),''),'YYYY-MM-DD HH24:MI:SS'),
TO_DATE(REPLACE(c1.EFFECTIEVE_START_DTM,CHR(0),''),'YYYY-MM-DD HH24:MI:SS'),
TO_DATE(REPLACE(c1.GEPLANDE_EIND_DTM,CHR(0),''),'YYYY-MM-DD HH24:MI:SS'),
TO_DATE(REPLACE(c1.EFFECTIEVE_EIND_DTM,CHR(0),''),'YYYY-MM-DD HH24:MI:SS'),
TO_DATE(REPLACE(c1.VERWACHTE_EIND_DTM,CHR(0),''),'YYYY-MM-DD HH24:MI:SS'),
TO_NUMBER(REPLACE(c1.SLA_WRKLIJK_AFWIJKINGS_PCT,CHR(0),'')),
REPLACE(c1.FASE,CHR(0),''),
TO_DATE(REPLACE(c1.PV_ONTVANGST_DTM,CHR(0),''),'YYYY-MM-DD HH24:MI:SS'),
REPLACE(c1.CLUSTER_MANAGER,CHR(0),''),
REPLACE(c1.WA_EIGENAAR,CHR(0),''),
'bestelling',
REPLACE(c1.PRESAGE_ID,CHR(0),''),
REPLACE(c1.LAATSTE_STATUS_BSCH,CHR(0),'')
);
UPDATE WA_SLA SET WA_OS = V_Huidig_WANUMMER where OFFERTE_WA_OS = V_Offerte_WANUMMER;
v_sr_no := v_sr_no + 1;

END LOOP; 
-- Calcualte actuals totals
UPDATE WA_SLA WS set WS.ACT_HP_TOTAAL = (Select sum(Bedrag) from WA_COMPASS_ACT where Projectcode = WS.PROJ_KORTE_NM) 
where IMAC_WA_TYPE_NM = 'bestelling' and BESTELLING_VOLG_NR = 1; 

UPDATE WA_SLA SET OFFERTE_WA_OS = WA_OS WHERE OFFERTE_WA_OS IS NULL;

UPDATE wa_compass_act SET PRESAGE_ID = (SELECT max(PRESAGE_ID) from wa_sla where wa_compass_act.PROJECTCODE = wa_sla.PROJ_KORTE_NM);
update wa_compass_act cm set cm.WA_OS_OFFERTE = (select max(sl.OFFERTE_WA_OS) from wa_sla sl where sl.PROJ_KORTE_NM = cm.PROJECTCODE and sl.BESTELLING_VOLG_NR = 1) where cm.WA_OS_OFFERTE is null;

INSERT INTO WA_LOGGING (GEBRUIKER, PAGINA, DATUM, OMSCHRIJVING)
VALUES ('SYSTEM', '', SYSDATE, 'OPLADEN SLA PROJECTEN (ExT): STOP OPLADEN - AANTAL: ' || TO_CHAR(v_sr_no));


END;
end;

